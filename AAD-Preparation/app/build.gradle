apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.catherine.materialdesignapp"
        minSdkVersion rootProject.ext.minSdkVersion
        // get it 17 or higher to support right-to-left layout features
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    buildTypes {
        debug {
            minifyEnabled false
            pseudoLocalesEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            pseudoLocalesEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // To support DayNight style, update to at lease 1.1.0-alpha02
    implementation "com.google.android.material:material:${rootProject.ext.material}"
    implementation "androidx.constraintlayout:constraintlayout:${rootProject.ext.constraintlayout}"
    implementation "androidx.recyclerview:recyclerview-selection:${rootProject.ext.recyclerviewSelection}"


    testImplementation "junit:junit:${rootProject.ext.junit}"
    androidTestImplementation "androidx.test:runner:${rootProject.ext.androidx_test}"
    androidTestUtil "androidx.test:orchestrator:${rootProject.ext.androidx_test}"

    implementation project(path: ':messagecenter')
    implementation "com.facebook.fresco:fresco:${rootProject.ext.fresco}"
    implementation "jp.wasabeef:fresco-processors:${rootProject.ext.frescoProcessors}"
    implementation "com.squareup.okhttp3:okhttp:${rootProject.ext.okhttp}"
    implementation "com.google.code.gson:gson:${rootProject.ext.gson}"
    implementation "com.google.firebase:firebase-database:${rootProject.ext.firebaseVersion}"

    // JetPack
    // Room components
    implementation "androidx.room:room-runtime:${rootProject.ext.roomVersion}"
    annotationProcessor "androidx.room:room-compiler:${rootProject.ext.roomVersion}"
    androidTestImplementation "androidx.room:room-testing:${rootProject.ext.roomVersion}"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:${rootProject.ext.archLifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-viewmodel:${rootProject.ext.archLifecycleVersion}"
    annotationProcessor "androidx.lifecycle:lifecycle-common-java8:${rootProject.ext.archLifecycleVersion}"
}
